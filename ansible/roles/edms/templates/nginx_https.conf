upstream local_backend {
  server 127.0.0.1:8080;
  keepalive 64;
}
# Only rate limit for POST
map $request_method $limit {
  default         "";
  POST            $binary_remote_addr;
}
limit_req_zone $limit zone=login:50m rate=5r/m;

# default server block
server {
    server_tokens off;
    return 404;
}

server {
{% include 'nginx_common_server.conf' %}
    listen [::]:443 ssl http2 ipv6only=on; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot

    # SSL settings
    ssl_certificate /etc/letsencrypt/live/{{domain}}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{domain}}/privkey.pem; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # ssl config from mozilla https://ssl-config.mozilla.org/
    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # HSTS
    {% if hsts %}add_header Strict-Transport-Security "max-age=63072000; includeSubDomains{% if hsts_preload %}; preload{% endif %}" always;{% endif %}
    {% if expect_ct %}add_header Expect-CT "enforce, max-age=63072000" always;{% endif %}
}
server {
    server_name {{domain}} www.{{domain}};
    server_tokens off;
    if ($host = www.{{domain}}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = {{domain}}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
    return 404; # managed by Certbot
}
